version: '3.8'

services:
  # Vector Database - Qdrant
  qdrant:
    image: qdrant/qdrant:latest
    container_name: context-memory-qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
      - ./config/qdrant.yaml:/qdrant/config/production.yaml
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    networks:
      - context-memory-network

  # Graph Database - Neo4j
  neo4j:
    image: neo4j:5.15-community
    container_name: context-memory-neo4j
    restart: unless-stopped
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
      - ./config/neo4j.conf:/var/lib/neo4j/conf/neo4j.conf
    environment:
      - NEO4J_AUTH=neo4j/contextmemory
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_security_procedures_allowlist=apoc.*
    networks:
      - context-memory-network

  # Note: Ollama is expected to be running externally on the host machine
  # The services will connect to Ollama via host.docker.internal:11434

  # Metrics Collection - Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: context-memory-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - context-memory-network

  # Monitoring Dashboard - Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: context-memory-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./config/grafana/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=contextmemory
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    depends_on:
      - prometheus
    networks:
      - context-memory-network

  # Context Memory Store API (placeholder for future phases)
  # context-api:
  #   build: ./src
  #   container_name: context-memory-api
  #   restart: unless-stopped
  #   ports:
  #     - "8080:8080"
  #   volumes:
  #     - ./project:/app/project
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Development
  #     - ConnectionStrings__Qdrant=http://qdrant:6333
  #     - ConnectionStrings__Neo4j=bolt://neo4j:7687
  #     - ConnectionStrings__Ollama=http://host.docker.internal:11434
  #   depends_on:
  #     - qdrant
  #     - neo4j
  #   networks:
  #     - context-memory-network

volumes:
  qdrant_data:
    driver: local
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_import:
    driver: local
  neo4j_plugins:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  context-memory-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16